{"version":3,"sources":["../src/Point.js"],"names":[],"mappings":"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","file":"Point.js","sourcesContent":["import { Matrix } from './Matrix'\n\n/**\n *\n */\nclass Point {\n\n    /**\n     * Creates a Point object with the given x and y coordinates.\n     *\n     * @name Point#constructor\n     * @param {Number} [x]\n     * @param {Number} [y]\n     *\n     * @example\n     * new Point(5, 7);\n     */\n    constructor(x = 0, y = 0) {\n        this._x = x;\n        this._y = y;\n\n        this._parent = null\n    }\n\n    set(x, y) {\n        this._x = x;\n        this._y = y;\n    }\n\n    set coordinateSystem(cos) {\n        this._parent = cos\n    }\n\n    get absolutePosition() {\n        if (this._parent) {\n            return this.transform(this._parent.getAbsoluteMatrix())\n        }\n    }\n\n    /**\n     *\n     * @returns {Number}\n     */\n    get absoluteX() {\n        if (this._parent) {\n            return this.absolutePosition._x\n        }\n        return this._x\n    }\n\n    /**\n     *\n     * @returns {Number}\n     */\n    get absoluteY() {\n        if (this._parent) {\n            return this.absolutePosition._y\n        }\n        return this._y\n    }\n\n    /**\n     *  todo relative coordinates with capital chars\n     * @returns {Number}\n     */\n    get relativeX() {\n\n        return this._x\n    }\n\n    /**\n     *\n     * @returns {Number}\n     */\n    get relativeY() {\n\n        return this._y\n    }\n\n    /**\n     *\n     * @returns {Number}\n     */\n    get x() {\n        return this.absoluteX\n    }\n\n    /**\n     *\n     * @param {Number} x\n     */\n    set x(x) {\n        this._x = x\n    }\n\n    /**\n     *\n     * @returns {Number}\n     */\n    get y() {\n        return this.absoluteY\n    }\n\n    /**\n     *\n     * @param {Number} y\n     */\n    set y(y) {\n        this._y = y\n    }\n\n    /**\n     * returns a new transformed Point\n     *\n     * @param matrix\n     * @returns {Point}\n     */\n    transform(matrix) {\n        return this.clone().transformSelf(matrix)\n    }\n\n    /**\n     * returns a copy of the point\n     *\n     * @returns {Point}\n     */\n    clone() {\n        return new Point(this._x, this._y)\n    }\n\n    /**\n     * returns a new transformed Point\n     *\n     * @param matrix\n     * @returns {Point}\n     *\n     * [a b tx] [ x ]\n     * [c d ty] [ y ]\n     * [0 0 1 ] [ 1 ]\n     */\n    transformSelf(m) {\n        //var matrix = matrix.multiply(new Matrix(1,0,0,1,this._x,this._y))\n\n\n        var x = m.a * this._x + m.b * this._y + m.tx\n        var y = m.c * this._x + m.d * this._y + m.ty\n        this._x = x\n        this._y = y\n        return this\n    }\n\n    set absolutePosition(pos) {\n        //todo\n        this._x = pos.x\n        this._y = pos.y\n    }\n\n    set parent(p) {//todo fix that. look into shape set\n        this._parent = p\n    }\n\n    /**\n     * adds and returns a new point\n     *\n     * @name Point#add\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {Object} Point\n     *\n     * @example\n     * point.add(5, 7);\n\n     */\n    add(x, y) {\n        return new Point(this._x + x, this._y + y)\n    }\n\n    /**\n     * adds to the current point\n     *\n     * @name Point#add\n     * @param {Number} x\n     * @param {Number} y\n     *\n     * @example\n     * point.add(5, 7);\n     */\n    addSelf(x, y) {\n        this._x += x\n        this._y += y\n        return this\n    }\n\n\n    /**\n     * multiplies\n     *\n     * @name Point#add\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {Object} Point\n     *\n     * @example\n     * point.add(5, 7);\n     */\n    multiply(x, y) {\n        return new Point(this._x * x, this._y * y)\n    }\n\n    distance(x, y) {\n        var dx = this.x - x;\n        var dy = this.y - y;\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    lerp(x, y, p) {\n        return new Point(\n            this.x + (x - this.x) * p,\n            this.y + (y - this.y) * p\n        )\n    }\n\n}\n\n\n/**\n *\n */\nclass ExtendedPoint extends Point {\n\n    /**\n     * Creates a Point object with the given x and y coordinates.\n     *\n     * @name Point#constructor\n     * @param {Number|Array|Object} arg0\n     * @param {Number} [arg1]\n     *\n     * @example\n     * new Point(5, 7);\n     * new Point([5, 7]);\n     * new Point({x:5, y:7});\n     * new Point(new Point(5, 7));\n     */\n    constructor(arg0, arg1) {\n        var point = ExtendedPoint._parseArgs(arguments);\n        super(point.x, point.y)\n    }\n\n    /**\n     * parses the input args and returns a point object with x and y coordinates\n     *\n     * @param {Number[]|Object[]} args - [[y, x], []] [{x:x, y:y}, []] [x, y] [Point, []]\n     * @returns {{x,y}}\n     */\n    static _parseArgs(args) {\n        var arg0 = args[0],\n            arg1 = args[1],\n            type = typeof arg0,\n            res = {}\n        if (type === 'number') {\n            var hasY = typeof arg1 === 'number'\n            res.x = arg0\n            res.y = hasY ? arg1 : arg0\n        } else if (type === 'undefined' || arg0 === null) {\n            res.x = res.y = 0\n        } else {\n            if (Array.isArray(arg0)) {\n                res.x = arg0[0]\n                res.y = arg0.length > 1 ? arg0[1] : arg0[0]\n            } else if (arg0.x != null) {\n                res.x = arg0.x\n                res.y = arg0.y\n            }\n        }\n\n        return res;\n    }\n\n\n    /**\n     * sets the coordinates\n     *\n     * @name Point#add\n     * @param {Number|Array|Object} arg0\n     * @param {Number} [arg1]\n     * @returns {Object} Point\n     *\n     * @example\n     * point.add(5, 7);\n     * point.add([5, 7]);\n     * point.add({x:5, y:7});\n     * point.add(new Point(5, 7));\n     */\n    set(arg0, arg1) {\n        var point = ExtendedPoint._parseArgs(arguments)\n        return super.set(point.x, point.y)\n    }\n\n    /**\n     * adds and returns a new point\n     *\n     * @name Point#add\n     * @param {Number|Array|Object} arg0\n     * @param {Number} [arg1]\n     * @returns {Object} Point\n     *\n     * @example\n     * point.add(5, 7);\n     * point.add([5, 7]);\n     * point.add({x:5, y:7});\n     * point.add(new Point(5, 7));\n     */\n    add(arg0, arg1) {\n        var point = ExtendedPoint._parseArgs(arguments)\n        return super.add(point.x, point.y)\n    }\n\n    /**\n     * adds to the current point\n     *\n     * @name Point#add\n     * @param {Number|Array|Object} arg0\n     * @param {Number} [arg1]\n     * @returns {Object} Point\n     *\n     * @example\n     * point.add(5, 7);\n     * point.add([5, 7]);\n     * point.add({x:5, y:7});\n     * point.add(new Point(5, 7));\n     */\n    addSelf(arg0, arg1) {\n        var point = ExtendedPoint._parseArgs(arguments)\n        super.addSelf(point.x, point.y)\n        return this\n    }\n\n\n    /**\n     * multiplies\n     *\n     * @name Point#add\n     * @param {Number|Array|Object} arg0\n     * @param {Number} [arg1]\n     * @returns {Object} Point\n     *\n     * @example\n     * point.add(5, 7);\n     * point.add([5, 7]);\n     * point.add({x:5, y:7});\n     * point.add(new Point(5, 7));\n     */\n    multiply(arg0, arg1) {\n        var point = ExtendedPoint._parseArgs(arguments)\n        return super.multiply(point.x, point.y)\n    }\n\n    distance(arg0, arg1) {\n        var point = ExtendedPoint._parseArgs(arguments)\n        return super.distance(point.x, point.y)\n    }\n\n    lerp(arg0, arg1, p) {\n        var point = ExtendedPoint._parseArgs(arguments)\n        p = p || arg1\n        console.log('lerp ', super.lerp(point.x, point.y, p))\n        return super.lerp(point.x, point.y, p)\n    }\n\n\n}\n\nexport { Point }\nexport { ExtendedPoint }\n"]}