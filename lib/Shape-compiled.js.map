{"version":3,"sources":["Shape.js"],"names":[],"mappings":"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","file":"Shape-compiled.js","sourcesContent":["var Point = require('./Point-compiled')\nvar Matrix = require('./Matrix-compiled')\n\n/**\n *\n */\nclass Shape {\n\n    /**\n     * Shape\n     *\n     */\n    constructor(position = [0, 0], rotation = 0) {\n        this._position = new Point(position)\n        this.rotation = rotation\n        this._children = []\n    }\n\n    set scale(scale) {\n        this._scale = scale\n    }\n\n    set rotation(rotation) {\n        this._rotation = rotation % 360\n        this._rotationRad = this._rotation / 180 * Math.PI\n    }\n\n    get rotation() {\n        return this._rotation\n    }\n\n    get absRotation() {\n        if(this._parent){\n            return this._parent.absRotation + this._rotation\n        }\n\n        return this._rotation\n    }\n\n    set position(p) {\n        this._position.set(p)\n    }\n\n    get position() {\n        return this._position\n    }\n\n    set parent(parent){ //todo a COS may extend a Point: Point+rotation=COS\n        this._parent = parent //remove this and rely on position.parent only?\n        this._position._parent = parent//todo check if thats right. or just add the parent to the PositionPoint\n    }\n\n    getBoundingBox() {\n\n    }\n\n    /**\n     *\n     * @returns {Matrix}\n     */\n    getAbsoluteMatrix() {\n        if (this._parent) {\n            return this._parent.getAbsoluteMatrix().multiply(this.getMatrix())\n        } else {\n            return this.getMatrix()\n        }\n    }\n\n    getMatrix() {\n        //todo cache matrix?\n        var rotation = new Matrix({\n            a: Math.cos(this._rotationRad), b: -Math.sin(this._rotationRad), tx: 0,\n            c: Math.sin(this._rotationRad), d: Math.cos(this._rotationRad), ty: 0\n        })\n\n        var translation = new Matrix({\n            a: 1, b: 0, tx: this._position._x,\n            c: 0, d: 1, ty: this._position._y\n        })\n\n\n\n        return translation.multiply(rotation)\n    }\n\n    addChild(child) {\n        this.link(child, this)\n        return this\n    }\n\n    setParent(parent) {\n        this.link(this, parent)\n        return this\n    }\n\n    /**\n     *\n     * @param {Shape|Point} child\n     * @param {Shape} parent\n     */\n    link(child, parent) {\n        parent._children.push(child)\n        child.parent = parent\n    }\n\n    transformBase() {\n        if (this._parent) {\n\n        }\n    }\n\n    intersect(Shape) {\n        //or add the type to the object this.type - nah\n        if (this.constructor.name == 'Circle' && Shape.constructor.name == 'Circle') {\n            return this._intersectCircleCircle(Shape.center, Shape._radius, this.center, this._radius)\n        }\n    }\n\n    isOutside(Shape) {\n        return this.intersect(Shape).isOutside()\n    }\n\n    _intersectCircleCircle(c1, r1, c2, r2) {\n        var result\n\n        // Determine minimum and maximum radii where circles can intersect\n        var r_max = r1 + r2\n        var r_min = Math.abs(r1 - r2)\n\n        // Determine actual distance between circle circles\n        var c_dist = c1.distance(c2)\n\n        if (c_dist > r_max) {\n            result = new Intersection(TestResult.OUTSIDE)\n        } else if (c_dist < r_min) {\n            result = new Intersection(TestResult.INSIDE)\n        } else {\n            var points = []\n\n            var a = (r1 * r1 - r2 * r2 + c_dist * c_dist) / ( 2 * c_dist )\n            var h = Math.sqrt(r1 * r1 - a * a)\n            var tmp = (c_dist == 0) ? 0 : a / c_dist\n            var p = c1.lerp(c2, tmp)\n            var b = (c_dist == 0) ? 0 : h / c_dist\n\n\n            points.push(\n                new Point(\n                    p.x - b * (c2.y - c1.y),\n                    p.y + b * (c2.x - c1.x)\n                )\n            )\n\n            if (b !== 0) //on.y one touching point\n                points.push(\n                    new Point(\n                        p.x + b * (c2.y - c1.y),\n                        p.y - b * (c2.x - c1.x)\n                    )\n                )\n\n            result = new Intersection(TestResult.INTERSECTION, points)\n        }\n\n        return result\n    }\n\n}\n\nclass TestResult {\n\n    constructor(type) {\n        this.type = type\n    }\n\n    is(str) {\n        return this.type == str\n    }\n\n    isInside() {\n        return this.is(TestResult.INSIDE)\n    }\n\n    isOutside() {\n        return this.is(TestResult.OUTSIDE)\n    }\n\n    isIntersection() {\n        return this.is(TestResult.INTERSECTION)\n    }\n}\n\nTestResult.INTERSECTION = 'INTERSECTION'\nTestResult.INSIDE = 'INSIDE'\nTestResult.OUTSIDE = 'OUTSIDE'\n\nclass Intersection extends TestResult {\n    constructor(type, points) {\n        super(type)\n        this.points = points\n    }\n}\n\nmodule.exports = Shape"]}